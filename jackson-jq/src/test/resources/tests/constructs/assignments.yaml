- q: 'true |= false'
  in: true
  out:
  - false

- q: '1 += 1'
  in: 1
  out:
  - 2
  v: "(, 1.6]"

- q: '1 = 3'
  in: 1
  out:
  - 3
  v: "(, 1.6]"

- q: '[1,2,3] | (.[] | select(. > 1)) |= (. + 10, . + 20)'
  out:
  - [1, 22, 23]
  v: "(,1.5]"

- q: '[1,2,3] | (.[] | select(. > 1)) |= (. + 10, . + 20)'
  out:
  - [1, 12, 13]
  v: "[1.6,)"

- q: '[1,2,3] | (.[], .[] | select(. > 1)) |= (. + 10, . + 40)'
  out:
  - [1, 82, 83]
  v: "(,1.5]"

- q: '[1,2,3] | (.[], .[] | select(. > 1)) |= (. + 10, . + 40)'
  out:
  - [1, 22, 23]
  v: "[1.6,)"

- q: '[1,2,3] | (.[], .[] | select(. > 1)) |= (if . == 3 then empty else . + 1 end)'
  out:
  - [1, null, 1]
  v: "[1.6,)"
  failing: true
  justification: This behavior is officially undefined. See https://github.com/stedolan/jq/issues/897.

- q: '[1,2,3] | (.[], .[] | select(. > 1)) |= (if . == 3 then empty else . + 1 end)'
  out:
  - [null, 1, 1]
  v: "(,1.5]"
  failing: true
  justification: This behavior is officially undefined. See https://github.com/stedolan/jq/issues/897.

- q: '[1,2,3] | (.[], .[] | select(. > 1)) |= (if . == 4 then empty else . + 1 end)'
  out:
  - [1, 4]
  v: "[1.6,)"
  failing: true
  justification: This behavior is officially undefined. See https://github.com/stedolan/jq/issues/897.

- q: '[1,2,3] | (.[], .[] | select(. > 1)) |= (if . == 4 then empty else . + 1 end)'
  out:
  - null
  v: "(,1.5]"
  failing: true
  justification: This behavior is officially undefined. See https://github.com/stedolan/jq/issues/897.

- q: '[1,2,3] | (.[], .[] | select(. > 1)) |= (if . == 2 then empty else . end)'
  out:
  - [1,3,null]
  v: '[1.6, )'
  failing: true
  justification: This behavior is officially undefined. See https://github.com/stedolan/jq/issues/897.

- q: '[1,2,3] | (.[], .[] | select(. > 1)) |= (if . == 2 then empty else . end)'
  out:
  - [null,null,null]
  v: '(,1.5]'
  failing: true
  justification: This behavior is officially undefined. See https://github.com/stedolan/jq/issues/897.

- q: '[1,2,3] | ((.[], .[]) | select(. > 1)) |= empty'
  out:
  - [1]
  v: "[1.6,)"
  failing: true
  justification: This behavior is officially undefined. See https://github.com/stedolan/jq/issues/897.

- q: '[1,2,3] | ((.[] | select(. > 1)) |= empty)'
  out:
  - [1, 3]
  v: '[1.6, )'
  failing: true
  justification: The result is not what everyone expects. Actually, this behavior is officially undefined. See https://github.com/stedolan/jq/issues/897.

- q: '[1,2,3] | ((.[], .[]) | select(. > 1)) |= empty'
  out:
  - null
  v: "(,1.5]"
  failing: true
  justification: This behavior is officially undefined. See https://github.com/stedolan/jq/issues/897.

- q: 'try (def f($n): $n.a; [{a: 1}, {a: 2}] | path(f(.[2]))) catch .'
  out:
  - "Invalid path expression near attempt to access element \"a\" of null"
  v: "[1.6,)"
  failing: true
  justification: "The jq documentation explicitly states `$var.foo is not a valid or useful path expression in .`."

- q: 'try (def f($n): $n.a; [{a: 1}, {a: 2}] | path(f(.[2]))) catch .'
  out:
  - [2, "a"]
  v: "(,1.5]"
  failing: true
  justification: "The jq documentation explicitly states `$var.foo is not a valid or useful path expression in .`."
